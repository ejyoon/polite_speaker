summarise(prob = mean(prob)) %>%
ungroup() %>%
mutate(phi_informative = phi_informative_bin,
phi_social = phi_social_bin,
phi_selfpres = phi_selfpres_bin) %>%
select(-phi_informative_bin, -phi_social_bin, phi_selfpres_bin) %>%
separate(utt, into = c("positive", "utterance")) %>%
mutate(positive = factor(positive, levels = c("yes", "not")),
utterance = factor(utterance, levels = c("terrible", "bad", "good", "amazing")),
phi_S1 = 1 - phi_S1) %>%
filter(goal != "NA") %>%
group_by(goal, state, utterance, positive) %>%
summarise(prob = mean(prob))
rs.s2.utt.dm <- rbind(
as.tibble(rs.s2.utt) %>%
ungroup() %>%
mutate(state = factor(state)) %>%
mutate(goal = fct_recode(goal,
"schematic: \nbe truly informative" = "be truly informative",
"schematic: \nbe truly social" = "be truly social",
"schematic: \nbe both" = "be both",
"schematic: \nappear informative" = "look informative",
"schematic: \nappear social" = "look social",
"schematic: \nappear both" = "look both")),
as.tibble(model.bda.utterance %>%
filter(model == "self5",
goal == "both") %>%
select(goal, positive, utterance, state, prob) %>%
mutate(goal = fct_recode(goal,
"full model: \nbe/appear both" = "both"))),
as.tibble(d.utt %>%
filter(goal == "both") %>%
select(goal, positive, utterance, state, prob) %>%
mutate(goal = fct_recode(goal,
"human data: \nbe/appear both" = "both")))) %>%
mutate(positive = factor(positive, levels = c("yes", "not")),
positive = fct_recode(positive,
"It was ~" = "yes",
"It wasn't ~" = "not"),
utterance = factor(utterance, levels = c(
"terrible",
"bad",
"good",
"amazing"
)))
fig.s2 <- ggplot(rs.s2.utt.dm, aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(goal~state, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180))+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("Pragmatic speaker production probability")
fig.s2
fig.s2.0heart <- ggplot(rs.s2.utt.dm %>%
filter(state == "0", grepl("schematic", goal)) %>%
mutate(goal = fct_recode(goal,
"be truly informative" = "schematic: \nbe truly informative",
"be truly social" = "schematic: \nbe truly social",
"be truly both" = "schematic: \nbe both",
"appear informative" = "schematic: \nappear informative",
"appear social" = "schematic: \nappear social",
"appear both" = "schematic: \nappear both")),
aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(.~goal, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180),
legend.position = "bottom")+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("proportion chosen") +
labs(color="")
fig.s2.0heart
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 8, height = 3,
path = here::here("model"))
rs.s2.tidy <- rs.s2 %>%
gather(utt, prob, -state, -phi_S1, -phi_informative, -phi_social, -phi_selfpres) %>%
mutate(phi_selfpres_bin = as.numeric(as.character(cut(phi_selfpres,
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),
labels = c(0.1, 0.3, 0.5, 0.7, 0.9)))),
phi_informative_bin = as.numeric(as.character(cut(phi_informative,
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),
labels = c(0.1, 0.3, 0.5, 0.7, 0.9)))),
phi_social_bin = as.numeric(as.character(cut(phi_social,
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),
labels = c(0.1, 0.3, 0.5, 0.7, 0.9))))) %>%
mutate(
goal = as.factor(case_when(
phi_informative_bin == 0.9 & phi_social_bin == 0.1 & phi_selfpres_bin == 0.1 ~ "be truly informative",
phi_informative_bin == 0.1 & phi_social_bin == 0.9 & phi_selfpres_bin == 0.1 ~ "be truly social",
(phi_informative_bin == 0.5 | phi_informative_bin == 0.3 | phi_informative_bin == 0.7) & (phi_social_bin == 0.5 | phi_social_bin == 0.7 | phi_social_bin == 0.3) & phi_selfpres_bin == 0.1 ~ "be truly both",
phi_informative_bin == 0.1 & phi_social_bin == 0.1 & (phi_selfpres_bin == 0.9 | phi_selfpres_bin == 0.7) & phi_S1 == 0.9  ~ "look informative",
phi_informative_bin == 0.1 & phi_social_bin == 0.1 & phi_selfpres_bin == 0.9 & phi_S1 == 0.1 ~ "look social",
phi_informative_bin == 0.1 & phi_social_bin == 0.1 & phi_selfpres_bin == 0.9 & (phi_S1 == 0.3) ~ "look both",
TRUE ~ "NA"))) %>%
mutate(goal = factor(goal, levels = c("be truly informative", "be truly social", "be both", "look informative","look social", "look both","NA")))
rs.s2.utt <- rs.s2.tidy %>%
group_by(goal, utt, state, phi_S1, phi_informative_bin, phi_social_bin, phi_selfpres_bin) %>%
summarise(prob = mean(prob)) %>%
ungroup() %>%
mutate(phi_informative = phi_informative_bin,
phi_social = phi_social_bin,
phi_selfpres = phi_selfpres_bin) %>%
select(-phi_informative_bin, -phi_social_bin, phi_selfpres_bin) %>%
separate(utt, into = c("positive", "utterance")) %>%
mutate(positive = factor(positive, levels = c("yes", "not")),
utterance = factor(utterance, levels = c("terrible", "bad", "good", "amazing")),
phi_S1 = 1 - phi_S1) %>%
filter(goal != "NA") %>%
group_by(goal, state, utterance, positive) %>%
summarise(prob = mean(prob))
rs.s2.utt.dm <- rbind(
as.tibble(rs.s2.utt) %>%
ungroup() %>%
mutate(state = factor(state)) %>%
mutate(goal = fct_recode(goal,
"schematic: \nbe truly informative" = "be truly informative",
"schematic: \nbe truly social" = "be truly social",
"schematic: \nbe both" = "be both",
"schematic: \nappear informative" = "look informative",
"schematic: \nappear social" = "look social",
"schematic: \nappear both" = "look both")),
as.tibble(model.bda.utterance %>%
filter(model == "self5",
goal == "both") %>%
select(goal, positive, utterance, state, prob) %>%
mutate(goal = fct_recode(goal,
"full model: \nbe/appear both" = "both"))),
as.tibble(d.utt %>%
filter(goal == "both") %>%
select(goal, positive, utterance, state, prob) %>%
mutate(goal = fct_recode(goal,
"human data: \nbe/appear both" = "both")))) %>%
mutate(positive = factor(positive, levels = c("yes", "not")),
positive = fct_recode(positive,
"It was ~" = "yes",
"It wasn't ~" = "not"),
utterance = factor(utterance, levels = c(
"terrible",
"bad",
"good",
"amazing"
)))
fig.s2 <- ggplot(rs.s2.utt.dm, aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(goal~state, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180))+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("Pragmatic speaker production probability")
fig.s2
fig.s2.0heart <- ggplot(rs.s2.utt.dm %>%
filter(state == "0", grepl("schematic", goal)) %>%
mutate(goal = fct_recode(goal,
"be truly informative" = "schematic: \nbe truly informative",
"be truly social" = "schematic: \nbe truly social",
"be truly both" = "schematic: \nbe both",
"appear informative" = "schematic: \nappear informative",
"appear social" = "schematic: \nappear social",
"appear both" = "schematic: \nappear both")),
aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(.~goal, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180),
legend.position = "bottom")+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("proportion chosen") +
labs(color="")
fig.s2.0heart
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 8, height = 3,
path = here::here("model"))
rs.s2.tidy %>% filter((phi_informative_bin == 0.5 | phi_informative_bin == 0.3 | phi_informative_bin == 0.7) & (phi_social_bin == 0.5 | phi_social_bin == 0.7 | phi_social_bin == 0.3) & phi_selfpres_bin == 0.1)
summary(rs.s2.tidy %>% filter((phi_informative_bin == 0.5 | phi_informative_bin == 0.3 | phi_informative_bin == 0.7) & (phi_social_bin == 0.5 | phi_social_bin == 0.7 | phi_social_bin == 0.3) & phi_selfpres_bin == 0.1))
rs.s2.utt <- rs.s2.tidy %>%
group_by(goal, utt, state, phi_S1, phi_informative_bin, phi_social_bin, phi_selfpres_bin) %>%
summarise(prob = mean(prob)) %>%
ungroup() %>%
mutate(phi_informative = phi_informative_bin,
phi_social = phi_social_bin,
phi_selfpres = phi_selfpres_bin) %>%
select(-phi_informative_bin, -phi_social_bin, phi_selfpres_bin) %>%
separate(utt, into = c("positive", "utterance")) %>%
mutate(positive = factor(positive, levels = c("yes", "not")),
utterance = factor(utterance, levels = c("terrible", "bad", "good", "amazing")),
phi_S1 = 1 - phi_S1) %>%
filter(goal != "NA") %>%
group_by(goal, state, utterance, positive) %>%
summarise(prob = mean(prob))
rs.s2.utt.dm <- rbind(
as.tibble(rs.s2.utt) %>%
ungroup() %>%
mutate(state = factor(state)) %>%
mutate(goal = fct_recode(goal,
"schematic: \nbe truly informative" = "be truly informative",
"schematic: \nbe truly social" = "be truly social",
"schematic: \nbe truly both" = "be truly both",
"schematic: \nappear informative" = "look informative",
"schematic: \nappear social" = "look social",
"schematic: \nappear both" = "look both")),
as.tibble(model.bda.utterance %>%
filter(model == "self5",
goal == "both") %>%
select(goal, positive, utterance, state, prob) %>%
mutate(goal = fct_recode(goal,
"full model: \nbe/appear both" = "both"))),
as.tibble(d.utt %>%
filter(goal == "both") %>%
select(goal, positive, utterance, state, prob) %>%
mutate(goal = fct_recode(goal,
"human data: \nbe/appear both" = "both")))) %>%
mutate(positive = factor(positive, levels = c("yes", "not")),
positive = fct_recode(positive,
"It was ~" = "yes",
"It wasn't ~" = "not"),
utterance = factor(utterance, levels = c(
"terrible",
"bad",
"good",
"amazing"
)))
fig.s2 <- ggplot(rs.s2.utt.dm, aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(goal~state, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180))+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("Pragmatic speaker production probability")
fig.s2
fig.s2.0heart <- ggplot(rs.s2.utt.dm %>%
filter(state == "0", grepl("schematic", goal)) %>%
mutate(goal = fct_recode(goal,
"be truly informative" = "schematic: \nbe truly informative",
"be truly social" = "schematic: \nbe truly social",
"be truly both" = "schematic: \nbe truly both",
"appear informative" = "schematic: \nappear informative",
"appear social" = "schematic: \nappear social",
"appear both" = "schematic: \nappear both")),
aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(.~goal, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180),
legend.position = "bottom")+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("proportion chosen") +
labs(color="")
fig.s2.0heart
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 8, height = 3,
path = here::here("model"))
rs.s2.tidy <- rs.s2 %>%
gather(utt, prob, -state, -phi_S1, -phi_informative, -phi_social, -phi_selfpres) %>%
mutate(phi_selfpres_bin = as.numeric(as.character(cut(phi_selfpres,
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),
labels = c(0.1, 0.3, 0.5, 0.7, 0.9)))),
phi_informative_bin = as.numeric(as.character(cut(phi_informative,
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),
labels = c(0.1, 0.3, 0.5, 0.7, 0.9)))),
phi_social_bin = as.numeric(as.character(cut(phi_social,
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),
labels = c(0.1, 0.3, 0.5, 0.7, 0.9))))) %>%
mutate(
goal = as.factor(case_when(
phi_informative_bin == 0.9 & phi_social_bin == 0.1 & phi_selfpres_bin == 0.1 ~ "be truly informative",
phi_informative_bin == 0.1 & phi_social_bin == 0.9 & phi_selfpres_bin == 0.1 ~ "be truly social",
(phi_informative_bin == 0.5 | phi_informative_bin == 0.3 | phi_informative_bin == 0.7) & (phi_social_bin == 0.5 | phi_social_bin == 0.7 | phi_social_bin == 0.3) & phi_selfpres_bin == 0.1 ~ "be truly both",
phi_informative_bin == 0.1 & phi_social_bin == 0.1 & (phi_selfpres_bin == 0.9 | phi_selfpres_bin == 0.7) & phi_S1 == 0.9  ~ "look informative",
phi_informative_bin == 0.1 & phi_social_bin == 0.1 & phi_selfpres_bin == 0.9 & phi_S1 == 0.1 ~ "look social",
phi_informative_bin == 0.1 & phi_social_bin == 0.1 & phi_selfpres_bin == 0.9 & (phi_S1 == 0.3) ~ "look both",
TRUE ~ "NA"))) %>%
mutate(goal = factor(goal, levels = c("be truly informative", "be truly social", "be truly both", "look informative","look social", "look both","NA")))
rs.s2.utt <- rs.s2.tidy %>%
group_by(goal, utt, state, phi_S1, phi_informative_bin, phi_social_bin, phi_selfpres_bin) %>%
summarise(prob = mean(prob)) %>%
ungroup() %>%
mutate(phi_informative = phi_informative_bin,
phi_social = phi_social_bin,
phi_selfpres = phi_selfpres_bin) %>%
select(-phi_informative_bin, -phi_social_bin, phi_selfpres_bin) %>%
separate(utt, into = c("positive", "utterance")) %>%
mutate(positive = factor(positive, levels = c("yes", "not")),
utterance = factor(utterance, levels = c("terrible", "bad", "good", "amazing")),
phi_S1 = 1 - phi_S1) %>%
filter(goal != "NA") %>%
group_by(goal, state, utterance, positive) %>%
summarise(prob = mean(prob))
rs.s2.utt.dm <- rbind(
as.tibble(rs.s2.utt) %>%
ungroup() %>%
mutate(state = factor(state)) %>%
mutate(goal = fct_recode(goal,
"schematic: \nbe truly informative" = "be truly informative",
"schematic: \nbe truly social" = "be truly social",
"schematic: \nbe truly both" = "be truly both",
"schematic: \nappear informative" = "look informative",
"schematic: \nappear social" = "look social",
"schematic: \nappear both" = "look both")),
as.tibble(model.bda.utterance %>%
filter(model == "self5",
goal == "both") %>%
select(goal, positive, utterance, state, prob) %>%
mutate(goal = fct_recode(goal,
"full model: \nbe/appear both" = "both"))),
as.tibble(d.utt %>%
filter(goal == "both") %>%
select(goal, positive, utterance, state, prob) %>%
mutate(goal = fct_recode(goal,
"human data: \nbe/appear both" = "both")))) %>%
mutate(positive = factor(positive, levels = c("yes", "not")),
positive = fct_recode(positive,
"It was ~" = "yes",
"It wasn't ~" = "not"),
utterance = factor(utterance, levels = c(
"terrible",
"bad",
"good",
"amazing"
)))
fig.s2 <- ggplot(rs.s2.utt.dm, aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(goal~state, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180))+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("Pragmatic speaker production probability")
fig.s2
fig.s2.0heart <- ggplot(rs.s2.utt.dm %>%
filter(state == "0", grepl("schematic", goal)) %>%
mutate(goal = fct_recode(goal,
"be truly informative" = "schematic: \nbe truly informative",
"be truly social" = "schematic: \nbe truly social",
"be truly both" = "schematic: \nbe truly both",
"appear informative" = "schematic: \nappear informative",
"appear social" = "schematic: \nappear social",
"appear both" = "schematic: \nappear both")),
aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(.~goal, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180),
legend.position = "bottom")+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("proportion chosen") +
labs(color="")
fig.s2.0heart
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 8, height = 3,
path = here::here("model"))
fig.s2.0heart <- ggplot(rs.s2.utt.dm %>%
filter(state == "0", grepl("schematic", goal)) %>%
mutate(goal = fct_recode(goal,
"informational: \nbe truly informative" = "schematic: \nbe truly informative",
"social: \nbe truly kind" = "schematic: \nbe truly social",
"inf & soc: \nbe truly both" = "schematic: \nbe truly both",
"presentational-inf: \nappear informative" = "schematic: \nappear informative",
"presentational-soc: \nappear social" = "schematic: \nappear social",
"presentational-both: \nappear both" = "schematic: \nappear both")),
aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(.~goal, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180),
legend.position = "bottom")+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("proportion chosen") +
labs(color="")
fig.s2.0heart
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 8, height = 3,
path = here::here("model"))
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 10, height = 4,
path = here::here("model"))
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 10, height = 3,
path = here::here("model"))
fig.s2.0heart <- ggplot(rs.s2.utt.dm %>%
filter(state == "0", grepl("schematic", goal)) %>%
mutate(goal = fct_recode(goal,
"informational: \nbe truly informative" = "schematic: \nbe truly informative",
"social: \nbe truly kind" = "schematic: \nbe truly social",
"informational & social: \nbe truly both" = "schematic: \nbe truly both",
"presentational-inf: \nappear informative" = "schematic: \nappear informative",
"presentational-soc: \nappear social" = "schematic: \nappear social",
"presentational-both: \nappear both" = "schematic: \nappear both")),
aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_grid(.~goal, switch = "y")+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180),
legend.position = "bottom")+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("proportion chosen") +
labs(color="")
fig.s2.0heart
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 10, height = 3,
path = here::here("model"))
fig.s2.0heart <- ggplot(rs.s2.utt.dm %>%
filter(state == "0", grepl("schematic", goal)) %>%
mutate(goal = fct_recode(goal,
"informational: \nbe truly informative" = "schematic: \nbe truly informative",
"social: \nbe truly kind" = "schematic: \nbe truly social",
"informational & social: \nbe truly both" = "schematic: \nbe truly both",
"presentational-inf: \nappear informative" = "schematic: \nappear informative",
"presentational-soc: \nappear social" = "schematic: \nappear social",
"presentational-both: \nappear both" = "schematic: \nappear both")),
aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_wrap(~goal, ncol=3)+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180),
legend.position = "bottom")+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("proportion chosen") +
labs(color="")
fig.s2.0heart
fig.s2.0heart <- ggplot(rs.s2.utt.dm %>%
filter(state == "0", grepl("schematic", goal)) %>%
mutate(goal = fct_recode(goal,
"informational: \n\"be truly informative\"" = "schematic: \nbe truly informative",
"social: \n\"be truly kind\"" = "schematic: \nbe truly social",
"informational & social: \n\"be truly both\"" = "schematic: \nbe truly both",
"presentational-inf: \n\"appear informative\"" = "schematic: \nappear informative",
"presentational-soc: \n\"appear social\"" = "schematic: \nappear social",
"presentational-both: \n\"appear both\"" = "schematic: \nappear both")),
aes( x = utterance, color = positive, y = prob, group = positive))+
geom_line()+
# geom_bar(stat = 'identity', position = position_dodge(), color = 'black')+
# facet_grid(goal~state, labeller=label_both, switch = "y")+
facet_wrap(~goal, ncol=3)+
scale_color_manual(values=c("#268bd2", "#dc322f"))+
theme_few()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
strip.text.y = element_text(angle = 180),
legend.position = "bottom")+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1), position = "right")+
ylab("proportion chosen") +
labs(color="")
fig.s2.0heart
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 10, height = 7,
path = here::here("model"))
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 10, height = 7,
path = here::here("model"))
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 6, height = 3.5,
path = here::here("model"))
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 6, height = 4,
path = here::here("model"))
# ggsave("img/s1.pdf", width = 8, height = 4)
ggsave("schematic-0heart.png", plot = fig.s2.0heart, width = 6, height = 4.5,
path = here::here("model"))
logML_self5 <- c(-2392.8144931006277,-2361.236364854019,-2364.2746065828746,-2317.2391109526557,-2355.388358547329,-2324.7428201060284)
logML_self6 <- c(-2384.4761974735775,-2398.8213428284394,-2369.217257633834,-2368.26067389219,-2360.6038124487754,-2317.0508457690685)
mean(logML_self5)
mean(logML_self6)
mean(logML_self5) - mean(logML_self6)
exp(mean(logML_self5) - mean(logML_self6))
exp(log(2))
logML_actual2 <- c(-2384.025431546218,-2329.743296764168,-2389.6045391745997,-2329.7107995386523,-2380.73471100466,-2455.157964608041)
mean(logML_self5) - mean(logML_actual2)
exp(mean(logML_self5) - mean(logML_self6))
mean(logML_self5) - mean(logML_self6)
